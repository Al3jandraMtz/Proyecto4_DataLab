#PRIMERA CONSULTA: Si quieres contar cu치ntos registros tienen duplicados.
-- Contar valores duplicados en varias columnas
SELECT 
    'user_id' AS column_name, 
    COUNT(*) AS duplicate_count 
FROM (
    SELECT 
        user_id 
    FROM 
        p4-datalab.Data_Set.amazon_review
    GROUP BY 
        user_id 
    HAVING 
        COUNT(*) > 1
) 

UNION ALL

SELECT 
    'user_name' AS column_name, 
    COUNT(*) AS duplicate_count 
FROM (
    SELECT 
        user_name
    FROM 
        p4-datalab.Data_Set.amazon_review
    GROUP BY 
        user_name 
    HAVING 
        COUNT(*) > 1
) 

UNION ALL

SELECT 
    'review_id' AS column_name, 
    COUNT(*) AS duplicate_count 
FROM (
    SELECT 
        review_id
    FROM 
        p4-datalab.Data_Set.amazon_review
    GROUP BY 
        review_id 
    HAVING 
        COUNT(*) > 1
) 

UNION ALL

SELECT 
    'review_title' AS column_name, 
    COUNT(*) AS duplicate_count 
FROM (
    SELECT 
        review_title
    FROM 
        p4-datalab.Data_Set.amazon_review
    GROUP BY 
        review_title
    HAVING 
        COUNT(*) > 1
) 

UNION ALL

SELECT 
    'review_content' AS column_name, 
    COUNT(*) AS duplicate_count 
FROM (
    SELECT 
        review_content
    FROM 
        p4-datalab.Data_Set.amazon_review
    GROUP BY 
        review_content
    HAVING 
        COUNT(*) > 1
) 

UNION ALL

SELECT 
    'img_link' AS column_name, 
    COUNT(*) AS duplicate_count 
FROM (
    SELECT 
        img_link
    FROM 
        p4-datalab.Data_Set.amazon_review
    GROUP BY 
        img_link
    HAVING 
        COUNT(*) > 1
) 

UNION ALL

SELECT 
    'product_link' AS column_name, 
    COUNT(*) AS duplicate_count 
FROM (
    SELECT 
        product_link
    FROM 
        p4-datalab.Data_Set.amazon_review
    GROUP BY 
        product_link
    HAVING 
        COUNT(*) > 1
) 

UNION ALL

SELECT 
    'product_id' AS column_name, 
    COUNT(*) AS duplicate_count 
FROM (
    SELECT 
        product_id
    FROM 
        p4-datalab.Data_Set.amazon_review
    GROUP BY 
        product_id
    HAVING 
        COUNT(*) > 1
) 

UNION ALL

SELECT 
    'rating' AS column_name, 
    COUNT(*) AS duplicate_count 
FROM (
    SELECT 
        rating
    FROM 
        p4-datalab.Data_Set.amazon_review
    GROUP BY 
        rating
    HAVING 
        COUNT(*) > 1
) 

UNION ALL

SELECT 
    'rating_count' AS column_name, 
    COUNT(*) AS duplicate_count 
FROM (
    SELECT 
        rating_count
    FROM 
        p4-datalab.Data_Set.amazon_review
    GROUP BY 
        rating_count
    HAVING 
        COUNT(*) > 1
) 

ORDER BY 
    column_name ASC;

#SEGUNDA CONSULTA: Cuenta cu치ntas veces est치n duplicados los registros, excluyendo la primera aparici칩n.
WITH UserIDDuplicates AS (
    SELECT
        'user_id' AS column_name,
        COUNT(*) - 1 AS duplicate_count
    FROM
        `p4-datalab.Data_Set.amazon_review`
    GROUP BY
        user_id
    HAVING
        COUNT(*) > 1
),
UserNameDuplicates AS (
    SELECT
        'user_name' AS column_name,
        COUNT(*) - 1 AS duplicate_count
    FROM
        `p4-datalab.Data_Set.amazon_review`
    GROUP BY
        user_name
    HAVING
        COUNT(*) > 1
),
ReviweIdDuplicates AS (
    SELECT
        'review_id' AS column_name,
        COUNT(*) - 1 AS duplicate_count
    FROM
        `p4-datalab.Data_Set.amazon_review`
    GROUP BY
        review_id
    HAVING
        COUNT(*) > 1
),
ReviewTitleeDuplicates AS (
    SELECT
        'review_titlee' AS column_name,
        COUNT(*) - 1 AS duplicate_count
    FROM
        `p4-datalab.Data_Set.amazon_review`
    GROUP BY
        review_title
    HAVING
        COUNT(*) > 1
),
ReviewContentDuplicates AS (
    SELECT
        'review_content' AS column_name,
        COUNT(*) - 1 AS duplicate_count
    FROM
        `p4-datalab.Data_Set.amazon_review`
    GROUP BY
        review_content
    HAVING
        COUNT(*) > 1
),
ImgLinkDuplicates AS (
    SELECT
        'img_link' AS column_name,
        COUNT(*) - 1 AS duplicate_count
    FROM
        `p4-datalab.Data_Set.amazon_review`
    GROUP BY
        img_link
    HAVING
        COUNT(*) > 1
),
ProductLinkDuplicates AS (
    SELECT
        'product_link' AS column_name,
        COUNT(*) - 1 AS duplicate_count
    FROM
        `p4-datalab.Data_Set.amazon_review`
    GROUP BY
        product_link
    HAVING
        COUNT(*) > 1
),
ProductIdDuplicates AS (
    SELECT
        'product_id' AS column_name,
        COUNT(*) - 1 AS duplicate_count
    FROM
        `p4-datalab.Data_Set.amazon_review`
    GROUP BY
        product_id
    HAVING
        COUNT(*) > 1
),
ratingDuplicates AS (
    SELECT
        'rating' AS column_name,
        COUNT(*) - 1 AS duplicate_count
    FROM
        `p4-datalab.Data_Set.amazon_review`
    GROUP BY
        rating
    HAVING
        COUNT(*) > 1
),
ratingCountDuplicates AS (
    SELECT
        'rating_count' AS column_name,
        COUNT(*) - 1 AS duplicate_count
    FROM
        `p4-datalab.Data_Set.amazon_review`
    GROUP BY
        rating_count
    HAVING
        COUNT(*) > 1
)
SELECT
    COALESCE((SELECT SUM(duplicate_count) FROM UserIDDuplicates), 0) AS user_id_duplicates,
    COALESCE((SELECT SUM(duplicate_count) FROM UserNameDuplicates), 0) AS user_name_duplicates,
    COALESCE((SELECT SUM(duplicate_count) FROM ReviweIdDuplicates), 0) AS review_id_duplicates,
    COALESCE((SELECT SUM(duplicate_count) FROM ReviewTitleeDuplicates), 0) AS review_titlee_duplicates,
    COALESCE((SELECT SUM(duplicate_count) FROM ReviewContentDuplicates), 0) AS review_content_duplicates,
    COALESCE((SELECT SUM(duplicate_count) FROM ImgLinkDuplicates), 0) AS img_link_duplicates,
    COALESCE((SELECT SUM(duplicate_count) FROM ProductLinkDuplicates), 0) AS product_link_duplicates,
    COALESCE((SELECT SUM(duplicate_count) FROM ProductIdDuplicates), 0) AS product_id_duplicates,
 COALESCE((SELECT SUM(duplicate_count) FROM ratingDuplicates), 0) AS rating_duplicates,
	COALESCE((SELECT SUM(duplicate_count) FROM ratingCountDuplicates), 0) AS rating_count_duplicates;

#TERCERA CONSULTA
-- Subconsulta para calcular el total de duplicados (desglosado) por cada variable
WITH ReviewIDDuplicates AS (
  SELECT
    'review_id' AS column_name,
    review_id,
    COUNT(*) - 1 AS duplicate_count
  FROM
    `p4-datalab.Data_Set.amazon_review`
  GROUP BY
    review_id
  HAVING
    COUNT(*) > 1
),
ReviewTitleDuplicates AS (
  SELECT
    'review_title' AS column_name,
    review_title,
    COUNT(*) - 1 AS duplicate_count
  FROM
    `p4-datalab.Data_Set.amazon_review`
  GROUP BY
    review_title
  HAVING
    COUNT(*) > 1
),
ReviewContentDuplicates AS (
  SELECT
    'review_content' AS column_name,
    review_content,
    COUNT(*) - 1 AS duplicate_count
  FROM
    `p4-datalab.Data_Set.amazon_review`
  GROUP BY
    review_content
  HAVING
    COUNT(*) > 1
),
ImgLinkDuplicates AS (
  SELECT
    'img_link' AS column_name,
    img_link,
    COUNT(*) - 1 AS duplicate_count
  FROM
    `p4-datalab.Data_Set.amazon_review`
  GROUP BY
    img_link
  HAVING
    COUNT(*) > 1
),
ProductIDDuplicates AS (
  SELECT
    'product_id' AS column_name,
    product_id,
    COUNT(*) - 1 AS duplicate_count
  FROM
    `p4-datalab.Data_Set.amazon_review`
  GROUP BY
    product_id
  HAVING
    COUNT(*) > 1
)

-- Consulta principal que une todos los resultados de duplicados
SELECT
  column_name,
  review_id AS identifier,
  duplicate_count,
  SUM(duplicate_count) OVER (PARTITION BY column_name) AS total_duplicados_excluyendo_original
FROM ReviewIDDuplicates

UNION ALL

SELECT
  column_name,
  review_title AS identifier,
  duplicate_count,
  SUM(duplicate_count) OVER (PARTITION BY column_name) AS total_duplicados_excluyendo_original
FROM ReviewTitleDuplicates

UNION ALL

SELECT
  column_name,
  review_content AS identifier,
  duplicate_count,
  SUM(duplicate_count) OVER (PARTITION BY column_name) AS total_duplicados_excluyendo_original
FROM ReviewContentDuplicates

UNION ALL

SELECT
  column_name,
  img_link AS identifier,
  duplicate_count,
  SUM(duplicate_count) OVER (PARTITION BY column_name) AS total_duplicados_excluyendo_original
FROM ImgLinkDuplicates

UNION ALL

SELECT
  column_name,
  product_id AS identifier,
  duplicate_count,
  SUM(duplicate_count) OVER (PARTITION BY column_name) AS total_duplicados_excluyendo_original
FROM ProductIDDuplicates;
    
